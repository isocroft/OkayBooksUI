@charset "UTF-8";

:root {
	--color-text-primary: #000000;
	--color-text-secondary: #AAAAAA;
    --color-text-tertiary: #EEEEEE;
    --color-text-quaternary: #FFFFFF;
    --color-text-quinary: #999999;
	--color-text-action: #65C100;
	--color-border-primary: #EEEEEE;
    --color-border-secondary: #DDDDDD;
    --color-border-tertiary: #999999;
    --color-border-quaternary: #F2F2F4;
    --color-border-quinary: #FFFFFF;
	--color-background-primary: #FFFFFF;
	--color-background-secondary: #F9F9FB;
    --color-background-tertiary: #DDDDDD;
    --color-background-quaternary: #65C100;
    --color-background-quinary: #EEEEEE;
    --color-svg-fill: #000000;
    --color-drop-shadow: #999999;
}

html {
    height: 100vh;
    height: 100svh;
    height: 100dvh;
    position: relative;
    font-family: 'Ubuntu', system-ui, sans-serif;
    font-size: 16px;
    color-scheme: light dark;
}
  
body {
    line-height: 1.5;
    -webkit-font-smoothing: subpixel-antialiased; /* anitialiased */
    height: 100%;
    box-sizing: content-box;
    -moz-box-sizing: content-box;
    -webkit-box-sizing: content-box;
    display: block;
    font-size: 100%;
    margin: 0;
    padding: 0;
}

:focus,
:focus-visible {
  outline: 0.05cm dotted var(--color-border-primary);
}

/* Root element new stacking context */
#root {
    width: 100%;
    height: 100%;
    background-color: var(--color-background-primary);
    position: relative;
    isolation: isolate;
    display: inherit;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

p {
    overflow-wrap: break-word;
    word-wrap: break-word;
    -webkit-hyphens: auto;
	-ms-hyphens: auto;
    -moz-hyphens: auto; 
    -epub-hyphens: auto; 
    hyphens: auto;
}

/* Improve media defaults */
img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}
  
/* Remove built-in form typography styles */
input, button, textarea, select {
    font: inherit;
}

/* Remove built-in styles on input tags */
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number]::-webkit-inner-spin-button {
    display: none;
}

input[type=number] {
    -moz-appearance: textfield;
}

input[type=search] {
    -moz-appearance: none;
}
  
/* Avoid text overflows */
h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
    word-wrap: break-word;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
    resize: none;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* reset default text opacity of input placeholder */
:-moz-placeholder {
    color: unset;
}

::-webkit-input-placeholder {
    color: unset;
}

::placeholder {
    color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
    content: initial;
}

@supports selector(:where(a)) and (all: unset) {
    *:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
        all: unset;
        display: revert;
    }

    /* preformatted text - use only for this feature */
    :where(pre) {
        all: revert;
    }

    /* fix the feature of 'hidden' attribute.
    display:revert; revert to element instead of attribute */
    :where([hidden]) {
        display: none;
    }

    /* revert for bug in Chromium browsers
    - fix for the content editable attribute will work properly.
    - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
    :where([contenteditable]:not([contenteditable="false"])) {
        -moz-user-modify: read-write;
        -webkit-user-modify: read-write;
        overflow-wrap: break-word;
        -webkit-line-break: after-white-space;
        -webkit-user-select: auto;
    }

    /* apply back the draggable feature - exist only in Chromium and Safari */
    :where([draggable="true"]) {
        -webkit-user-drag: element;
    }

    /* Revert Modal native behavior */
    :where(dialog:modal) {
        all: revert;
    }
}